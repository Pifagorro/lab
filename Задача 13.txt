#include <iostream>
#include <vector>
#include <queue>
using namespace std;

const int dx[] = { -2, -2, 2, 2, 1, -1, 1, -1 };
const int dy[] = { -1, 1, -1, 1, 2, -2, -2, 2 };
int main()
{
	system("chcp 1251");
	bool pole[8][8];

	for (int i = 0; i < 8; i++)
		for (int j = 0; j < 8; j++)
			pole[i][j] = 0;             
	int x1, y1;        
	cout << "Введіть початкові координати";
	cin >> x1 >> y1;
	pole[x1 - 1][y1 - 1] = 1;     
	int x2, y2;      
	cout << "Введіть кінцеві координати";
	cin >> x2 >> y2;
	vector <pair <int, int> > xod; 
	queue <pair <pair <int, int>, vector <pair <int, int> > > > way;
	way.push(make_pair(make_pair(x1 - 1, y1 - 1), xod));
	while (!way.empty())
	{
		pair <int, int> now = way.front().first; 
		xod = way.front().second;               
		if (now.first == x2 - 1 && now.second == y2 - 1) break;
		way.pop(); 
		for (int d = 0; d < 8; d++)
		{
			if (now.first + dx[d] < 8 && now.first + dx[d] >= 0 &&
				now.second + dy[d] < 8 && now.second + dy[d] >= 0 &&
				pole[now.first + dx[d]][now.second + dy[d]] == 0)
			{
				vector <pair <int, int> > xod2 = xod;
				xod2.push_back(make_pair(now.first + dx[d], now.second + dy[d]));
				way.push(make_pair(make_pair(now.first + dx[d], now.second + dy[d]), xod2));
				pole[now.first + dx[d]][now.second + dy[d]] = 1;
			}
		}
	}
	cout << "Необхідна кількість ходів: " << xod.size() << endl;
	cout << "Пройде клітки: " << endl;
	for (int i = 0; i < xod.size(); i++)
		cout << xod[i].first + 1 << " " << xod[i].second + 1 << endl;
	system("pause");
	return 0;
}